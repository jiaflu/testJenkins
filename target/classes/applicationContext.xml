<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

    <!-- 启动对注解的识别-->
    <context:annotation-config />

    <!-- 自动扫描service包-->
    <context:component-scan base-package="com.jenkins.service" />

    <!-- 导入数据库配置文件 -->
    <context:property-placeholder location="classpath:jdbc.properties" />
    <!-- 配置数据库连接池 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!-- 基本属性 url、user、password -->
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <!--druid连接池中配置driver的属性叫"driverClassName"-->
        <!--配置成<property name="driverClassName" value="${jdbc.driver}"/>即可，不配置也可以是因为druid会根据url自动识别数据库类型-->

        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="1" />
        <property name="minIdle" value="1" />
        <property name="maxActive" value="20" />

        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000" />

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000" />

        <property name="validationQuery" value="SELECT 1" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />

        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="true" />
        <property name="maxPoolPreparedStatementPerConnectionSize"
                  value="20" />
    </bean>

    <!--&lt;!&ndash; Mybatis的SessionFactory配置 &ndash;&gt;-->
    <!--&lt;!&ndash;Spring和MyBatis完美整合，不需要mybatis的配置映射文件&ndash;&gt;-->
    <!--<bean id="sqlSession" class="org.mybatis.spring.SqlSessionFactoryBean">-->
        <!--<property name="typeAliasesPackage" value="com.ljf.tmall.pojo" />-->
        <!--<property name="dataSource" ref="dataSource" />-->
        <!--&lt;!&ndash;自动扫描mapping.xml文件&ndash;&gt;-->
        <!--<property name="mapperLocations" value="classpath:mapper/*.xml" />-->
        <!--&lt;!&ndash; 分页插件，目前先注释，后面重构的时候才会用到 &ndash;&gt;-->
        <!--<property name="plugins">-->
            <!--<array>-->
                <!--<bean class="com.github.pagehelper.PageInterceptor">-->
                    <!--<property name="properties">-->
                        <!--<value>-->

                        <!--</value>-->
                    <!--</property>-->
                <!--</bean>-->
            <!--</array>-->
        <!--</property>-->
    <!--</bean>-->

    <!--&lt;!&ndash;Mybatis的Mapper文件识别&ndash;&gt;-->
    <!--&lt;!&ndash;DAO接口所在的包名，Spring会自动查找其下的类&ndash;&gt;-->
    <!--<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">-->
        <!--<property name="basePackage" value="com.ljf.tmall.mapper"/>-->
    <!--</bean>-->

</beans>